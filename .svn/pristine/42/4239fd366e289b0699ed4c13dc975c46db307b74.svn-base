package fxLukio;

/**
 * Lukio-luokka, joka huolehtii oppilaista.  P‰‰osin kaikki metodit
 * ovat vain "v‰litt‰j‰metodeja" oppilaisiin.
 * @author laolkorh ja majuhama
 * @version 1.0
 * 10.03.2016
 */
public class Lukio {
    private final Oppilaat oppilaat = new Oppilaat();


    /**
     * Palautaa lukion oppilaat
     * @return oppilaiden m‰‰r‰
     */
    public int getOppilaat() {
        return oppilaat.getLkm();
    }


    /**
     * Poistaa oppilaista ja kursseista ne joilla on nro. Kesken.
     * @param nro viitenumero, jonka mukaan poistetaan
     * @return montako oppilasta poistettiin
     */
    public int poista(@SuppressWarnings("unused") int nro) {
        return 0;
    }


    /**
     * Lis‰‰ lukioon uuden oppilaan
     * @param oppilas lis‰tt‰v‰ oppilas
     * @throws SailoException jos lis‰yst‰ ei voida tehd‰
     * @example
     * <pre name="test">
     * #THROWS SailoException
     * Lukio lukio = new Lukio();
     * Oppilas aku1 = new Oppilas(), aku2 = new Oppilas();
     * aku1.rekisteroi(); aku2.rekisteroi();
     * lukio.getOppilaat() === 0;
     * lukio.lisaa(aku1); lukio.getOppilaat() === 1;
     * lukio.lisaa(aku2); lukio.getOppilaat() === 2;
     * lukio.lisaa(aku1); lukio.getOppilaat() === 3;
     * lukio.getJasenia() === 3;
     * lukio.annaOppilas(0) === aku1;
     * lukio.annaOppilas(1) === aku2;
     * lukio.annaOppilas(2) === aku1;
     * lukio.annaOppilas(3) === aku1; #THROWS IndexOutOfBoundsException 
     * lukio.lisaa(aku1); lukio.getOppilaat() === 4;
     * lukio.lisaa(aku1); lukio.getOppilaat() === 5;
     * lukio.lisaa(aku1);            #THROWS SailoException
     * </pre>
     */
    public void lisaa(Oppilas oppilas) throws SailoException {
        oppilaat.lisaa(oppilas);
    }


    /**
     * Palauttaa i:n j‰senen
     * @param i monesko j‰sen palautetaan
     * @return viite i:teen j‰seneen
     * @throws IndexOutOfBoundsException jos i v‰‰rin
     */
    public Oppilas annaOppilas(int i) throws IndexOutOfBoundsException {
        return oppilaat.anna(i);
    }


    /**
     * Lukee lukion tiedot tiedostosta
     * @param nimi jota k‰yte‰‰n lukemisessa
     * @throws SailoException jos lukeminen ep‰onnistuu
     */
    public void lueTiedostosta(String nimi) throws SailoException {
        oppilaat.lueTiedostosta(nimi);
    }


    /**
     * Tallettaa lukion tiedot tiedostoon
     * @throws SailoException jos tallettamisessa ongelmia
     */
    public void talleta() throws SailoException {
        oppilaat.talleta();
        // TODO: yrit‰ tallettaa toinen vaikka toinen ep‰onnistuisi
    }


    /**
     * Testiohjelma lukiosta
     * @param args ei k‰ytˆss‰
     */
    public static void main(String args[]) {
        Lukio lukio = new Lukio();

        try {
            // lukio.lueTiedostosta("kelmit");

            Oppilas aku1 = new Oppilas(), aku2 = new Oppilas();
            aku1.rekisteroi();
            aku1.vastaaAkuAnkka();
            aku2.rekisteroi();
            aku2.vastaaAkuAnkka();

            lukio.lisaa(aku1);
            lukio.lisaa(aku2);

            System.out.println("============= lukion testi =================");

            for (int i = 0; i < lukio.getOppilaat(); i++) {
                Oppilas oppilas = lukio.annaOppilas(i);
                System.out.println("Oppilas paikassa: " + i);
                oppilas.tulosta(System.out);
            }

        } catch (SailoException ex) {
            System.out.println(ex.getMessage());
        }
    }

}
